apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    def API_URL
    def WEB_URL
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if ("true" == IS_TEST) {
                outputFileName = "dev-app-user-${variant.versionName}.apk".toLowerCase()
            } else {
                outputFileName = "app.user-${variant.versionName}.apk".toLowerCase()
            }
        }
    }
    defaultConfig {
        applicationId "com.wuyou.user"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 15
        versionName "1.6.3"
        multiDexEnabled true
        ndk { abiFilters 'armeabi', 'armeabi-v7a' ,'x86'}
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        release {
            storeFile file(KEY_PATH)
            storePassword rootProject.storePassword
            keyAlias rootProject.keyAlias
            keyPassword rootProject.keyPassword
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        if ("true" == IS_TEST) {
            API_URL = DUBUG_SERVER_URL
            WEB_URL = DUBUG_WEB_URL
        } else {
            API_URL = RELEASE_SERVER_URL
            WEB_URL = RELEASE_WEB_URL
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            buildConfigField 'String', 'API_SERVER_URL', API_URL
//            buildConfigField 'String', 'API_WEB_URL', WEB_URL
            signingConfig signingConfigs.release
            debuggable true
        }
        debug {
            buildConfigField 'String', 'API_SERVER_URL', API_URL
            buildConfigField 'String', 'API_WEB_URL', WEB_URL
            signingConfig signingConfigs.release
            debuggable true
        }
    }
    greendao {
        schemaVersion 7
        targetGenDir 'src/main/java'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    packagingOptions {
        pickFirst 'META-INF/*'
    }

    aaptOptions { cruncherEnabled = false }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion rootProject.supportLibraryVersion
                }
            }
        }
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile 'org.mongodb:mongo-java-driver:3.8.1'
    //微信 和Glide库 见module
    compile fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/AMap_Location_V4.2.0_20180809.jar')
    implementation files('libs/AMap_Search_V6.1.0_20180330.jar')
    implementation files('libs/Android_Map3D_SDK_V6.3.1_20180726.jar')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    compile 'com.github.ngreedy:tribe_lib:3.3.5'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    compile 'org.greenrobot:greendao:3.2.2'
    compile 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.1.0'
    compile 'com.github.techery:properratingbar:0.0.5'
    compile 'cn.jzvd:jiaozivideoplayer:6.2.7'
    compile project(':bangwo8Ui')
    compile 'com.sackcentury:shinebutton:0.2.0'
    compile('com.github.gzu-liyujiang.AndroidPicker:WheelPicker:1.5.5') {
        exclude group: 'com.android.support'
    }
    compile 'com.android.support:multidex:1.0.3'
    compile project(path: ':shareutil')
    compile project(path: ':banner')
    implementation files('libs/alipaySdk-20180403.jar')
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'
    compile 'com.google.zxing:core:3.2.1'
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    implementation files('libs/SaaS_AppAnalytics_Android_SDK_V4.0.20.jar')
    implementation 'com.google.guava:guava:23.0-android'
    implementation 'io.github.novacrypto:BIP32:0.0.8'
    //    implementation files('libs/bcprov-jdk15on-159.jar')
    implementation 'com.github.wanglu1209:WPopup:0.21'
    implementation 'com.github.ipfs:java-ipfs-api:v1.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
    implementation files('libs/aliyun-oss-sdk-android-2.2.0.jar')
    implementation files('libs/windvane-min-8.0.3.2.3.jar')
    implementation (name:'FaceLivenessOpen-2.1.6.10',ext:'aar')
    implementation (name:'rpsdk-release_2.4.0.3',ext:'aar')
    implementation (name:'SecurityGuardSDK-external-release-5.4.94',ext:'aar')
    implementation (name:'SecurityBodySDK-external-release-5.4.66',ext:'aar')
    implementation (name:'NoCaptchaSDK-external-release-5.4.26',ext:'aar')
}